{
  "contractName": "ERC721PresetMinterPauserAutoId",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - token ID and URI autogeneration  * This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details.  * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.      * Requirements:      * - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract.      * Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.      * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.      * Role bearers are not sorted in any particular way, and their ordering may change at any point.      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.      * If `account` had not been already granted `role`, emits a {RoleGranted} event.      * Requirements:      * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction.      * See {ERC721-_mint}.      * Requirements:      * - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers.      * See {ERC721Pausable} and {Pausable-_pause}.      * Requirements:      * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.      * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).      * If the calling account had been granted `role`, emits a {RoleRevoked} event.      * Requirements:      * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.      * If `account` had been granted `role`, emits a {RoleRevoked} event.      * Requirements:      * - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.      * See {ERC721Pausable} and {Pausable-_unpause}.      * Requirements:      * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol\":\"ERC721PresetMinterPauserAutoId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xd9e1cdbea4cf7c51ac26f5782db0fb3d78c1b37e090547e83aef497a727a18f5\",\"urls\":[\"bzz-raw://5017e004334d7579774232e18f739ee9eb39438d03c49a9451a35e315c28761b\",\"dweb:/ipfs/QmNb8Q8C6WLgtWqCE7iL5T1UN52Q6QsE7ZtVc6ppcvViXe\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x9aebca86ab21a332bc34865475177073cd18a432ef8e0921b21bea864d39f85f\",\"urls\":[\"bzz-raw://c32c350e12cd1427eeda3ba0e23172cfd7b8ea772c2861c499ca4cad11b7c673\",\"dweb:/ipfs/QmVAEythW94EjHZLaVYn7wvY5j4K8kYsPJPyVEWALtrxVv\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x9ed426cf3e38eebff76bb62467b964397a651f5bc790fddbbbb317408b2cb59f\",\"urls\":[\"bzz-raw://b4f33678891b579bc9147d5516d65157a9db54ef339ba60f4f0adb11c301f939\",\"dweb:/ipfs/QmYZpeGK4Cpiw8VbPthTqijVbrMFVw1BfRn7oUkP85oyN5\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe422884a5ef330f9f92024cbabf06101ee132889600ce2da21ecccef6d00699f\",\"urls\":[\"bzz-raw://2f3ab2e8a2811cd0a053e5b4271a828e5c2044c0ff3b97d78512758b536beaf4\",\"dweb:/ipfs/QmeFi4p4m7D1uUys15uPCzWLN1K2EUA3becSBNazJTtc7v\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x8d890f7a794b66b8b3ab54779603c254f85ee0d436dd4a17b3543c6629b726f8\",\"urls\":[\"bzz-raw://887bb68104c8f862a66939b192a85e79564bed9bbe72cda6240fd89bbea642fd\",\"dweb:/ipfs/QmbC56SFqW7UCx26RfPFWPiEXnQTJXSBA5r4SrojRMHqeM\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0xed208caa3bea776fb9f1991e983a01e2dc6cdf85efbe9a57c6178fce87e00716\",\"urls\":[\"bzz-raw://e07293b532f4c55c51ec897a76a24853cd28ec73be62b3e0eb05e8f88f44b6b7\",\"dweb:/ipfs/QmdYigDseY53zt7wY59Q49jxJWVdztHaWfjuaNse4JhXU8\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xc28a76a83c95bdb00be1cabfac124d7c96a30160dda25768a454be6cebefe8eb\",\"urls\":[\"bzz-raw://4d343da3ed8d463ae51fff7aa4bb4576c1acf527eda4ceaf4b16eeb08c58052d\",\"dweb:/ipfs/QmaWNTTEWHix8S1n9z5EmSVjCAhQsYuHZijJABenkgw3AA\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x2589d209575fc6f1c2a2e1a02d0f363349c62fd40da30bcbdc98ead981cde82d\",\"urls\":[\"bzz-raw://7ea5a43abab0448b5f49c177d6908a70e719f5a25633fe1bf5307a05cddd71cf\",\"dweb:/ipfs/QmNi545pyzSEHhcnSyZ4KdxAeZrdikmYJbDF3JGm4pMckg\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0x7e98ec93350bf379c711fdc05a5d54d36e2932d662008cad1fc4c634f8e3824e\",\"urls\":[\"bzz-raw://1f02758b978b460641607bafd09094f95c8c0e8bfd6541085ce4a78e7b78be50\",\"dweb:/ipfs/QmQE19ieWTcFTq3XghBz83XTnYCvchivQGu5gBR6npSrT4\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x91db100dda33be3cb161cabdac0509454d172702299dbd1b6fa2e05ba642bdc4\",\"urls\":[\"bzz-raw://21fec202af687c65f79f8f234e82bbdac027b6239b2756269430ca6ec23409ff\",\"dweb:/ipfs/QmX7MCq7cXkiZEzT749rNsUPCZKgQxfsMH35GPoszMdLnK\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xfad2a742f3e804f64389362ac93b267da405839b8f5fc36a5f6f5c99b8e015ae\",\"urls\":[\"bzz-raw://7d892f306fb83195377533e28c0b91060808e3198e43bff4253ef6a211bb311e\",\"dweb:/ipfs/QmPquy92WXd65D5NCDDbZMRcs3HDw1zSYuZb4z5PAdVKdB\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf3f62c312a3dcc958db5881e4e1b267b57ac2364e6763094dae90a956eaa71ed\",\"urls\":[\"bzz-raw://e707aaf4a910fdde96979aff7ad28df8c6cdb59bc47f34105c73a55e5d6163b2\",\"dweb:/ipfs/QmYEguAwm6LBX2n3ibvKPgqo6eRdsbMbxYqXwZbwq4Y8X2\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x90dea29aecfa0bc55f3ba86bd24d87b19726e2affa86292f4ba8052e85cc4d56\",\"urls\":[\"bzz-raw://b3518cea454999f659b0fd63f810ab61a7d568fe8ad974d84ab15febd321a0a5\",\"dweb:/ipfs/QmSvS87R4H68JuokmA4oZMELAB49uJfSxeLGfZuXB7dowZ\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xb45dc9b431fd17029e917725b523f7302f31d3501c11f9bf4f985d2b088d36d3\",\"urls\":[\"bzz-raw://5e276244483cce4d0765d5cd229141a3aa98761e0034736dcd7887e5235acb29\",\"dweb:/ipfs/QmTrizLJ2MCYuaG8YPwg9umQ3XvCd3xjrwkzjcjqvSxYH4\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x6fbbe955935a8833ccb2022ebae28494f149450d275a0624e51af35d4aab1890\",\"urls\":[\"bzz-raw://62b13c3d4a46351896186219cfb5f413180a049c39ff7da9680648af006dfadc\",\"dweb:/ipfs/QmY5vv7wUqDakKsvb7NfMVkbSWhErt86CbrZBN9y3Af7yp\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfc81f3ffdea8be5d013ba08cb95fb57234f4bdb282b650d38cee4e9db55a08fc\",\"urls\":[\"bzz-raw://8c64fb755aa3ff4259ca83264099436bee73730a198aabdb0dca1eba489d28aa\",\"dweb:/ipfs/QmZ3gtLo24zcuKtWwnAUy17aNgVWb4ZMLxJFJMnBTVMVr8\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xf128d04c8d68c52bf056feb2ddfe1fa775085573fcbcb42fd3429ab5ee5403dd\",\"urls\":[\"bzz-raw://253a5a0c9894ad117b7cb73c571a7587e0ed271b60cb6f156be568855169b177\",\"dweb:/ipfs/QmZZJDNoWNbUo9MF18jw2pfUy2Z64L2q4Y3jGLia14RapV\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xc3d606cfb7d9b7250ed2dd614e1ab1511ed8cdcc7a7c423c3a5b993e00ea0543\",\"urls\":[\"bzz-raw://4230f822b6508de19e5ae0170ab9e667711da3b10317fe389b0a9f6cbaaa11b2\",\"dweb:/ipfs/Qmapwh2SdVRpuHVftsvyvf9GQGn4sBUa8jP3hSSBpnJxNR\"]},\"/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xe0b9e736a5f1b7c3e93bb95296afdfe7f869904f12638726f5b7420062166ec0\",\"urls\":[\"bzz-raw://b0cd661940fe6b903b4680ddb35256bbd69df06e4efac8fbd1727d26950d61e3\",\"dweb:/ipfs/QmTqZPafYrMrSfdt9nuVxrz46jreK5aVRvhbrB6K5rBKN7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200431238038062004312833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001d257600080fd5b83820191506020820185811115620001e957600080fd5b82518660018202830111640100000000821117156200020757600080fd5b8083526020830192505050908051906020019080838360005b838110156200023d57808201518184015260208101905062000220565b50505050905090810190601f1680156200026b5780820380516001836020036101000a031916815260200191505b5060405250505082826200028c6301ffc9a760e01b6200040d60201b60201c565b8160079080519060200190620002a4929190620006c8565b508060089080519060200190620002bd929190620006c8565b50620002d66380ac58cd60e01b6200040d60201b60201c565b620002ee635b5e139f60e01b6200040d60201b60201c565b6200030663780e9d6360e01b6200040d60201b60201c565b50506000600b60006101000a81548160ff021916908315150217905550620003476000801b6200033b6200051660201b60201c565b6200051e60201b60201c565b6200039d60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020620003916200051660201b60201c565b6200051e60201b60201c565b620003f360405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020620003e76200051660201b60201c565b6200051e60201b60201c565b62000404816200053460201b60201c565b50505062000777565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620004aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b6200053082826200055060201b60201c565b5050565b80600a90805190602001906200054c929190620006c8565b5050565b6200057e81600080858152602001908152602001600020600001620005f360201b62002c041790919060201c565b15620005ef57620005946200051660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000623836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200062b60201b60201c565b905092915050565b60006200063f8383620006a560201b60201c565b6200069a5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200069f565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200070b57805160ff19168380011785556200073c565b828001600101855582156200073c579182015b828111156200073b5782518255916020019190600101906200071e565b5b5090506200074b91906200074f565b5090565b6200077491905b808211156200077057600081600090555060010162000756565b5090565b90565b613b8b80620007876000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d539139314610bc3578063d547741f14610be1578063e63ab1e914610c2f578063e985e9c514610c4d576101f0565b8063a22cb46514610985578063b88d4fde146109d5578063c87b56dd14610ada578063ca15c87314610b81576101f0565b80639010d07c116100de5780639010d07c1461080657806391d148541461087e57806395d89b41146108e4578063a217fddf14610967576101f0565b80636a627842146106dd5780636c0360eb1461072157806370a08231146107a45780638456cb59146107fc576101f0565b80632f745c591161018757806342966c681161015657806342966c68146105dd5780634f6ccce71461060b5780635c975abb1461064d5780636352211e1461066f576101f0565b80632f745c59146104b557806336568abe146105175780633f4ba83a1461056557806342842e0e1461056f576101f0565b806318160ddd116101c357806318160ddd1461039957806323b872dd146103b7578063248a9ca3146104255780632f2ff15d14610467576101f0565b806301ffc9a7146101f557806306fdde031461025a578063081812fc146102dd578063095ea7b31461034b575b600080fd5b6102406004803603602081101561020b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610cc9565b604051808215151515815260200191505060405180910390f35b610262610d31565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a2578082015181840152602081019050610287565b50505050905090810190601f1680156102cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610309600480360360208110156102f357600080fd5b8101908080359060200190929190505050610dd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103976004803603604081101561036157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6e565b005b6103a1610fb2565b6040518082815260200191505060405180910390f35b610423600480360360608110156103cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc3565b005b6104516004803603602081101561043b57600080fd5b8101908080359060200190929190505050611039565b6040518082815260200191505060405180910390f35b6104b36004803603604081101561047d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b005b610501600480360360408110156104cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110e1565b6040518082815260200191505060405180910390f35b6105636004803603604081101561052d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061113c565b005b61056d6111d5565b005b6105db6004803603606081101561058557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061127a565b005b610609600480360360208110156105f357600080fd5b810190808035906020019092919050505061129a565b005b6106376004803603602081101561062157600080fd5b810190808035906020019092919050505061130c565b6040518082815260200191505060405180910390f35b61065561132f565b604051808215151515815260200191505060405180910390f35b61069b6004803603602081101561068557600080fd5b8101908080359060200190929190505050611346565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071f600480360360208110156106f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061137d565b005b610729611438565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561076957808201518184015260208101905061074e565b50505050905090810190601f1680156107965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e6600480360360208110156107ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114da565b6040518082815260200191505060405180910390f35b6108046115af565b005b61083c6004803603604081101561081c57600080fd5b810190808035906020019092919080359060200190929190505050611654565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ca6004803603604081101561089457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b604051808215151515815260200191505060405180910390f35b6108ec6116b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561092c578082015181840152602081019050610911565b50505050905090810190601f1680156109595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61096f611758565b6040518082815260200191505060405180910390f35b6109d36004803603604081101561099b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061175f565b005b610ad8600480360360808110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a5257600080fd5b820183602082011115610a6457600080fd5b80359060200191846001830284011164010000000083111715610a8657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611917565b005b610b0660048036036020811015610af057600080fd5b810190808035906020019092919050505061198f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b46578082015181840152602081019050610b2b565b50505050905090810190601f168015610b735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bad60048036036020811015610b9757600080fd5b8101908080359060200190929190505050611c78565b6040518082815260200191505060405180910390f35b610bcb611c9e565b6040518082815260200191505060405180910390f35b610c2d60048036036040811015610bf757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cd7565b005b610c37611d60565b6040518082815260200191505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d99565b604051808215151515815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dc95780601f10610d9e57610100808354040283529160200191610dc9565b820191906000526020600020905b815481529060010190602001808311610dac57829003601f168201915b5050505050905090565b6000610dde82611e2d565b610e33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806139a4602c913960400191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e7982611346565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a286021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610f1f611e4a565b73ffffffffffffffffffffffffffffffffffffffff161480610f4e5750610f4d81610f48611e4a565b611d99565b5b610fa3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806138f76038913960400191505060405180910390fd5b610fad8383611e52565b505050565b6000610fbe6003611f0b565b905090565b610fd4610fce611e4a565b82611f20565b611029576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613a496031913960400191505060405180910390fd5b611034838383612014565b505050565b6000806000838152602001908152602001600020600201549050919050565b61107e60008084815260200190815260200160002060020154611079611e4a565b611685565b6110d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806137d8602f913960400191505060405180910390fd5b6110dd8282612257565b5050565b600061113482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122ea90919063ffffffff16565b905092915050565b611144611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613b27602f913960400191505060405180910390fd5b6111d18282612304565b5050565b61121b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020611216611e4a565b611685565b611270576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180613ae76040913960400191505060405180910390fd5b611278612397565b565b61129583838360405180602001604052806000815250611917565b505050565b6112ab6112a5611e4a565b82611f20565b611300576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180613ab76030913960400191505060405180910390fd5b611309816124a0565b50565b6000806113238360036125da90919063ffffffff16565b50905080915050919050565b6000600b60009054906101000a900460ff16905090565b6000611376826040518060600160405280602981526020016139596029913960036126099092919063ffffffff16565b9050919050565b6113c360405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206113be611e4a565b611685565b611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613a7a603d913960400191505060405180910390fd5b61142b81611426600c612628565b612636565b611435600c61282a565b50565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d05780601f106114a5576101008083540402835291602001916114d0565b820191906000526020600020905b8154815290600101906020018083116114b357829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061392f602a913960400191505060405180910390fd5b6115a8600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612840565b9050919050565b6115f560405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206115f0611e4a565b611685565b61164a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180613839603e913960400191505060405180910390fd5b611652612855565b565b600061167d8260008086815260200190815260200160002060000161295f90919063ffffffff16565b905092915050565b60006116ae8260008086815260200190815260200160002060000161297990919063ffffffff16565b905092915050565b606060088054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b5050505050905090565b6000801b81565b611767611e4a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060066000611815611e4a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166118c2611e4a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611928611922611e4a565b83611f20565b61197d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613a496031913960400191505060405180910390fd5b611989848484846129a9565b50505050565b606061199a82611e2d565b6119ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806139f9602f913960400191505060405180910390fd5b6060600960008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a985780601f10611a6d57610100808354040283529160200191611a98565b820191906000526020600020905b815481529060010190602001808311611a7b57829003601f168201915b505050505090506000600a8054600181600116156101000203166002900490501415611ac75780915050611c73565b600081511115611ba057600a816040516020018083805460018160011615610100020316600290048015611b325780601f10611b10576101008083540402835291820191611b32565b820191906000526020600020905b815481529060010190602001808311611b1e575b505082805190602001908083835b60208310611b635780518252602082019150602081019050602083039250611b40565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611c73565b600a611bab84612a1b565b6040516020018083805460018160011615610100020316600290048015611c095780601f10611be7576101008083540402835291820191611c09565b820191906000526020600020905b815481529060010190602001808311611bf5575b505082805190602001908083835b60208310611c3a5780518252602082019150602081019050602083039250611c17565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000611c97600080848152602001908152602001600020600001612b4b565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b611cfd60008084815260200190815260200160002060020154611cf8611e4a565b611685565b611d52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138c76030913960400191505060405180910390fd5b611d5c8282612304565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611e43826003612b6090919063ffffffff16565b9050919050565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ec583611346565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611f1982600001612b7a565b9050919050565b6000611f2b82611e2d565b611f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061389b602c913960400191505060405180910390fd5b6000611f8b83611346565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ffa57508373ffffffffffffffffffffffffffffffffffffffff16611fe284610dd3565b73ffffffffffffffffffffffffffffffffffffffff16145b8061200b575061200a8185611d99565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661203482611346565b73ffffffffffffffffffffffffffffffffffffffff16146120a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806139d06029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612126576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806138776024913960400191505060405180910390fd5b612131838383612b8b565b61213c600082611e52565b61218d81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b9b90919063ffffffff16565b506121df81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612bb590919063ffffffff16565b506121f681836003612bcf9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61227e81600080858152602001908152602001600020600001612c0490919063ffffffff16565b156122e65761228b611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006122f98360000183612c34565b60001c905092915050565b61232b81600080858152602001908152602001600020600001612cb790919063ffffffff16565b1561239357612338611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600b60009054906101000a900460ff16612419576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600b60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61245d611e4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006124ab82611346565b90506124b981600084612b8b565b6124c4600083611e52565b6000600960008481526020019081526020016000208054600181600116156101000203166002900490501461251357600960008381526020019081526020016000206000612512919061371d565b5b61256482600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b9b90919063ffffffff16565b50612579826003612ce790919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806125ed8660000186612d01565b915091508160001c8160001c8090509350935050509250929050565b600061261c846000018460001b84612d9a565b60001c90509392505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6126e281611e2d565b15612755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61276160008383612b8b565b6127b281600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612bb590919063ffffffff16565b506127c981836003612bcf9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b600061284e82600001612e90565b9050919050565b600b60009054906101000a900460ff16156128d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861291c611e4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061296e8360000183612c34565b60001c905092915050565b60006129a1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ea1565b905092915050565b6129b4848484612014565b6129c084848484612ec4565b612a15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806138076032913960400191505060405180910390fd5b50505050565b60606000821415612a63576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612b46565b600082905060005b60008214612a8d578080600101915050600a8281612a8557fe5b049150612a6b565b6060816040519080825280601f01601f191660200182016040528015612ac25781602001600182028038833980820191505090505b50905060006001830390508593505b60008414612b3e57600a8481612ae357fe5b0660300160f81b82828060019003935081518110612afd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481612b3657fe5b049350612ad1565b819450505050505b919050565b6000612b5982600001612e90565b9050919050565b6000612b72836000018360001b613109565b905092915050565b600081600001805490509050919050565b612b9683838361312c565b505050565b6000612bad836000018360001b61319a565b905092915050565b6000612bc7836000018360001b613282565b905092915050565b6000612bfb846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6132f2565b90509392505050565b6000612c2c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613282565b905092915050565b600081836000018054905011612c95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061378b6022913960400191505060405180910390fd5b826000018281548110612ca457fe5b9060005260206000200154905092915050565b6000612cdf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61319a565b905092915050565b6000612cf9836000018360001b6133ce565b905092915050565b60008082846000018054905011612d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139826022913960400191505060405180910390fd5b6000846000018481548110612d7457fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612e61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e26578082015181840152602081019050612e0b565b50505050905090810190601f168015612e535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110612e7457fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612ee58473ffffffffffffffffffffffffffffffffffffffff166134e7565b612ef25760019050613101565b606061308863150b7a0260e01b612f07611e4a565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612fb7578082015181840152602081019050612f9c565b50505050905090810190601f168015612fe45780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613807603291398773ffffffffffffffffffffffffffffffffffffffff166134fa9092919063ffffffff16565b905060008180602001905160208110156130a157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b613137838383613512565b61313f61132f565b15613195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806137ad602b913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461327657600060018203905060006001866000018054905003905060008660000182815481106131e557fe5b906000526020600020015490508087600001848154811061320257fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061323a57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061327c565b60009150505b92915050565b600061328e8383612ea1565b6132e75782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506132ec565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415613399578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506133c7565b828560000160018303815481106133ac57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146134db576000600182039050600060018660000180549050039050600086600001828154811061341957fe5b906000526020600020906002020190508087600001848154811061343957fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061348c57fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506134e1565b60009150505b92915050565b600080823b905060008111915050919050565b60606135098484600085613517565b90509392505050565b505050565b6060613522856134e7565b613594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106135e457805182526020820191506020810190506020830392506135c1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613646576040519150601f19603f3d011682016040523d82523d6000602084013e61364b565b606091505b50915091508115613660578092505050613715565b6000815111156136735780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136da5780820151818401526020810190506136bf565b50505050905090810190601f1680156137075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b50805460018160011615610100020316600290046000825580601f106137435750613762565b601f0160209004906000526020600020908101906137619190613765565b5b50565b61378791905b8082111561378357600081600090555060010161376b565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220718b98e972d0f6119260ee3650553e4f47fe38263096d4948ffa61b3465d2d9264736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d539139314610bc3578063d547741f14610be1578063e63ab1e914610c2f578063e985e9c514610c4d576101f0565b8063a22cb46514610985578063b88d4fde146109d5578063c87b56dd14610ada578063ca15c87314610b81576101f0565b80639010d07c116100de5780639010d07c1461080657806391d148541461087e57806395d89b41146108e4578063a217fddf14610967576101f0565b80636a627842146106dd5780636c0360eb1461072157806370a08231146107a45780638456cb59146107fc576101f0565b80632f745c591161018757806342966c681161015657806342966c68146105dd5780634f6ccce71461060b5780635c975abb1461064d5780636352211e1461066f576101f0565b80632f745c59146104b557806336568abe146105175780633f4ba83a1461056557806342842e0e1461056f576101f0565b806318160ddd116101c357806318160ddd1461039957806323b872dd146103b7578063248a9ca3146104255780632f2ff15d14610467576101f0565b806301ffc9a7146101f557806306fdde031461025a578063081812fc146102dd578063095ea7b31461034b575b600080fd5b6102406004803603602081101561020b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610cc9565b604051808215151515815260200191505060405180910390f35b610262610d31565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a2578082015181840152602081019050610287565b50505050905090810190601f1680156102cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610309600480360360208110156102f357600080fd5b8101908080359060200190929190505050610dd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103976004803603604081101561036157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6e565b005b6103a1610fb2565b6040518082815260200191505060405180910390f35b610423600480360360608110156103cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc3565b005b6104516004803603602081101561043b57600080fd5b8101908080359060200190929190505050611039565b6040518082815260200191505060405180910390f35b6104b36004803603604081101561047d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b005b610501600480360360408110156104cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110e1565b6040518082815260200191505060405180910390f35b6105636004803603604081101561052d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061113c565b005b61056d6111d5565b005b6105db6004803603606081101561058557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061127a565b005b610609600480360360208110156105f357600080fd5b810190808035906020019092919050505061129a565b005b6106376004803603602081101561062157600080fd5b810190808035906020019092919050505061130c565b6040518082815260200191505060405180910390f35b61065561132f565b604051808215151515815260200191505060405180910390f35b61069b6004803603602081101561068557600080fd5b8101908080359060200190929190505050611346565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071f600480360360208110156106f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061137d565b005b610729611438565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561076957808201518184015260208101905061074e565b50505050905090810190601f1680156107965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e6600480360360208110156107ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114da565b6040518082815260200191505060405180910390f35b6108046115af565b005b61083c6004803603604081101561081c57600080fd5b810190808035906020019092919080359060200190929190505050611654565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ca6004803603604081101561089457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b604051808215151515815260200191505060405180910390f35b6108ec6116b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561092c578082015181840152602081019050610911565b50505050905090810190601f1680156109595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61096f611758565b6040518082815260200191505060405180910390f35b6109d36004803603604081101561099b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061175f565b005b610ad8600480360360808110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a5257600080fd5b820183602082011115610a6457600080fd5b80359060200191846001830284011164010000000083111715610a8657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611917565b005b610b0660048036036020811015610af057600080fd5b810190808035906020019092919050505061198f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b46578082015181840152602081019050610b2b565b50505050905090810190601f168015610b735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bad60048036036020811015610b9757600080fd5b8101908080359060200190929190505050611c78565b6040518082815260200191505060405180910390f35b610bcb611c9e565b6040518082815260200191505060405180910390f35b610c2d60048036036040811015610bf757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cd7565b005b610c37611d60565b6040518082815260200191505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d99565b604051808215151515815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dc95780601f10610d9e57610100808354040283529160200191610dc9565b820191906000526020600020905b815481529060010190602001808311610dac57829003601f168201915b5050505050905090565b6000610dde82611e2d565b610e33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806139a4602c913960400191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e7982611346565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a286021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610f1f611e4a565b73ffffffffffffffffffffffffffffffffffffffff161480610f4e5750610f4d81610f48611e4a565b611d99565b5b610fa3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806138f76038913960400191505060405180910390fd5b610fad8383611e52565b505050565b6000610fbe6003611f0b565b905090565b610fd4610fce611e4a565b82611f20565b611029576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613a496031913960400191505060405180910390fd5b611034838383612014565b505050565b6000806000838152602001908152602001600020600201549050919050565b61107e60008084815260200190815260200160002060020154611079611e4a565b611685565b6110d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806137d8602f913960400191505060405180910390fd5b6110dd8282612257565b5050565b600061113482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122ea90919063ffffffff16565b905092915050565b611144611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613b27602f913960400191505060405180910390fd5b6111d18282612304565b5050565b61121b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020611216611e4a565b611685565b611270576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180613ae76040913960400191505060405180910390fd5b611278612397565b565b61129583838360405180602001604052806000815250611917565b505050565b6112ab6112a5611e4a565b82611f20565b611300576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180613ab76030913960400191505060405180910390fd5b611309816124a0565b50565b6000806113238360036125da90919063ffffffff16565b50905080915050919050565b6000600b60009054906101000a900460ff16905090565b6000611376826040518060600160405280602981526020016139596029913960036126099092919063ffffffff16565b9050919050565b6113c360405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206113be611e4a565b611685565b611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613a7a603d913960400191505060405180910390fd5b61142b81611426600c612628565b612636565b611435600c61282a565b50565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d05780601f106114a5576101008083540402835291602001916114d0565b820191906000526020600020905b8154815290600101906020018083116114b357829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061392f602a913960400191505060405180910390fd5b6115a8600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612840565b9050919050565b6115f560405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206115f0611e4a565b611685565b61164a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180613839603e913960400191505060405180910390fd5b611652612855565b565b600061167d8260008086815260200190815260200160002060000161295f90919063ffffffff16565b905092915050565b60006116ae8260008086815260200190815260200160002060000161297990919063ffffffff16565b905092915050565b606060088054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b5050505050905090565b6000801b81565b611767611e4a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060066000611815611e4a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166118c2611e4a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611928611922611e4a565b83611f20565b61197d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613a496031913960400191505060405180910390fd5b611989848484846129a9565b50505050565b606061199a82611e2d565b6119ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806139f9602f913960400191505060405180910390fd5b6060600960008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a985780601f10611a6d57610100808354040283529160200191611a98565b820191906000526020600020905b815481529060010190602001808311611a7b57829003601f168201915b505050505090506000600a8054600181600116156101000203166002900490501415611ac75780915050611c73565b600081511115611ba057600a816040516020018083805460018160011615610100020316600290048015611b325780601f10611b10576101008083540402835291820191611b32565b820191906000526020600020905b815481529060010190602001808311611b1e575b505082805190602001908083835b60208310611b635780518252602082019150602081019050602083039250611b40565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611c73565b600a611bab84612a1b565b6040516020018083805460018160011615610100020316600290048015611c095780601f10611be7576101008083540402835291820191611c09565b820191906000526020600020905b815481529060010190602001808311611bf5575b505082805190602001908083835b60208310611c3a5780518252602082019150602081019050602083039250611c17565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000611c97600080848152602001908152602001600020600001612b4b565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b611cfd60008084815260200190815260200160002060020154611cf8611e4a565b611685565b611d52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138c76030913960400191505060405180910390fd5b611d5c8282612304565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611e43826003612b6090919063ffffffff16565b9050919050565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ec583611346565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611f1982600001612b7a565b9050919050565b6000611f2b82611e2d565b611f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061389b602c913960400191505060405180910390fd5b6000611f8b83611346565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ffa57508373ffffffffffffffffffffffffffffffffffffffff16611fe284610dd3565b73ffffffffffffffffffffffffffffffffffffffff16145b8061200b575061200a8185611d99565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661203482611346565b73ffffffffffffffffffffffffffffffffffffffff16146120a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806139d06029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612126576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806138776024913960400191505060405180910390fd5b612131838383612b8b565b61213c600082611e52565b61218d81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b9b90919063ffffffff16565b506121df81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612bb590919063ffffffff16565b506121f681836003612bcf9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61227e81600080858152602001908152602001600020600001612c0490919063ffffffff16565b156122e65761228b611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006122f98360000183612c34565b60001c905092915050565b61232b81600080858152602001908152602001600020600001612cb790919063ffffffff16565b1561239357612338611e4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600b60009054906101000a900460ff16612419576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600b60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61245d611e4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006124ab82611346565b90506124b981600084612b8b565b6124c4600083611e52565b6000600960008481526020019081526020016000208054600181600116156101000203166002900490501461251357600960008381526020019081526020016000206000612512919061371d565b5b61256482600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b9b90919063ffffffff16565b50612579826003612ce790919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806125ed8660000186612d01565b915091508160001c8160001c8090509350935050509250929050565b600061261c846000018460001b84612d9a565b60001c90509392505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6126e281611e2d565b15612755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61276160008383612b8b565b6127b281600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612bb590919063ffffffff16565b506127c981836003612bcf9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b600061284e82600001612e90565b9050919050565b600b60009054906101000a900460ff16156128d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861291c611e4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061296e8360000183612c34565b60001c905092915050565b60006129a1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ea1565b905092915050565b6129b4848484612014565b6129c084848484612ec4565b612a15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806138076032913960400191505060405180910390fd5b50505050565b60606000821415612a63576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612b46565b600082905060005b60008214612a8d578080600101915050600a8281612a8557fe5b049150612a6b565b6060816040519080825280601f01601f191660200182016040528015612ac25781602001600182028038833980820191505090505b50905060006001830390508593505b60008414612b3e57600a8481612ae357fe5b0660300160f81b82828060019003935081518110612afd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481612b3657fe5b049350612ad1565b819450505050505b919050565b6000612b5982600001612e90565b9050919050565b6000612b72836000018360001b613109565b905092915050565b600081600001805490509050919050565b612b9683838361312c565b505050565b6000612bad836000018360001b61319a565b905092915050565b6000612bc7836000018360001b613282565b905092915050565b6000612bfb846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6132f2565b90509392505050565b6000612c2c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613282565b905092915050565b600081836000018054905011612c95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061378b6022913960400191505060405180910390fd5b826000018281548110612ca457fe5b9060005260206000200154905092915050565b6000612cdf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61319a565b905092915050565b6000612cf9836000018360001b6133ce565b905092915050565b60008082846000018054905011612d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139826022913960400191505060405180910390fd5b6000846000018481548110612d7457fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612e61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e26578082015181840152602081019050612e0b565b50505050905090810190601f168015612e535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110612e7457fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612ee58473ffffffffffffffffffffffffffffffffffffffff166134e7565b612ef25760019050613101565b606061308863150b7a0260e01b612f07611e4a565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612fb7578082015181840152602081019050612f9c565b50505050905090810190601f168015612fe45780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613807603291398773ffffffffffffffffffffffffffffffffffffffff166134fa9092919063ffffffff16565b905060008180602001905160208110156130a157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b613137838383613512565b61313f61132f565b15613195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806137ad602b913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461327657600060018203905060006001866000018054905003905060008660000182815481106131e557fe5b906000526020600020015490508087600001848154811061320257fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061323a57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061327c565b60009150505b92915050565b600061328e8383612ea1565b6132e75782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506132ec565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415613399578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506133c7565b828560000160018303815481106133ac57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146134db576000600182039050600060018660000180549050039050600086600001828154811061341957fe5b906000526020600020906002020190508087600001848154811061343957fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061348c57fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506134e1565b60009150505b92915050565b600080823b905060008111915050919050565b60606135098484600085613517565b90509392505050565b505050565b6060613522856134e7565b613594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106135e457805182526020820191506020810190506020830392506135c1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613646576040519150601f19603f3d011682016040523d82523d6000602084013e61364b565b606091505b50915091508115613660578092505050613715565b6000815111156136735780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136da5780820151818401526020810190506136bf565b50505050905090810190601f1680156137075780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b50805460018160011615610100020316600290046000825580601f106137435750613762565b601f0160209004906000526020600020908101906137619190613765565b5b50565b61378791905b8082111561378357600081600090555060010161376b565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220718b98e972d0f6119260ee3650553e4f47fe38263096d4948ffa61b3465d2d9264736f6c63430006020033",
  "sourceMap": "917:2690:26:-:0;;;1517:299;8:9:-1;5:2;;;30:1;27;20:12;5:2;1517:299:26;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1517:299:26;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1517:299:26;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1517:299:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1517:299:26;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1517:299:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1517:299:26;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1517:299:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:4;1614:6;777:40:10;434:10;796:20;;777:18;;;:40;;:::i;:::-;3740:4:48;3732:5;:12;;;;;;;;;;;;:::i;:::-;;3765:6;3755:7;:16;;;;;;;;;;;;:::i;:::-;;3862:40;2801:10;3881:20;;3862:18;;;:40;;:::i;:::-;3913:49;3142:10;3932:29;;3913:18;;;:49;;:::i;:::-;3973:51;3524:10;3992:31;;3973:18;;;:51;;:::i;:::-;3659:373;;965:5:66;955:7;;:15;;;;;;;;;;;;;;;;;;1633:44:26::1;1816:4:6;1644:18:26::0;::::1;1664:12;:10;;;:12;;:::i;:::-;1633:10;;;:44;;:::i;:::-;1690:37;1104:24;;;;;;;::::0;::::1;;;;;;;;;;;1714:12;:10;;;:12;;:::i;:::-;1690:10;;;:37;;:::i;:::-;1738;1173:24;;;;;;;::::0;::::1;;;;;;;;;;;1762:12;:10;;;:12;;:::i;:::-;1738:10;;;:37;;:::i;:::-;1788:20;1800:7;1788:11;;;:20;;:::i;:::-;1517:299:::0;;;917:2690;;1531:201:10;1630:10;1615:25;;:11;:25;;;;;1607:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:4;1684:20;:33;1705:11;1684:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1531:201;:::o;605:106:0:-;658:15;693:10;686:17;;605:106;:::o;6769:112:6:-;6848:25;6859:4;6865:7;6848:10;;;:25;;:::i;:::-;6769:112;;:::o;15070:100:48:-;15154:8;15143;:19;;;;;;;;;;;;:::i;:::-;;15070:100;:::o;7220:188:6:-;7294:33;7319:7;7294:6;:12;7301:4;7294:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7290:111;;;7376:12;:10;;;:12;;:::i;:::-;7349:40;;7367:7;7349:40;;7361:4;7349:40;;;;;;;;;;7290:111;7220:188;;:::o;5010:143:65:-;5080:4;5104:41;5109:3;:10;;5137:5;5129:14;;5121:23;;5104:4;;;:41;;:::i;:::-;5097:48;;5010:143;;;;:::o;1664:414::-;1727:4;1749:21;1759:3;1764:5;1749:9;;;:21;;:::i;:::-;1744:327;;1787:3;:11;;1804:5;1787:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1787:23:65;;;;;;;;;;;;;;;;;;;1970:3;:11;;:18;;;;1948:3;:12;;:19;1961:5;1948:19;;;;;;;;;;;:40;;;;2010:4;2003:11;;;;1744:327;2054:5;2047:12;;1664:414;;;;;:::o;3884:129::-;3957:4;4004:1;3981:3;:12;;:19;3994:5;3981:19;;;;;;;;;;;;:24;;3974:31;;3884:129;;;;:::o;917:2690:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "917:2690:26:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:2690:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:142:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;982:142:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4609:92:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4609:92:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7296:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7296:213:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6840:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6840:390:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6334:203;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8170:305;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8170:305:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4392:114:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:114:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4768:227;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4768:227:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6104:154:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6104:154:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5977:209:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5977:209:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3224:185:26;;;:::i;:::-;;8546:151:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8546:151:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;464:245:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;464:245:49;;;;;;;;;;;;;;;;;:::i;:::-;;6614:164:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6614:164:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1078:78:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4373:169:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4373:169:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2204:407:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2204:407:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;5931:89:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5931:89:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4096:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4096:215:48;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2826:179:26;;;:::i;:::-;;4065:138:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4065:138:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3026:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3026:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4770:96:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4770:96:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:49:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7581:295:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7581:295:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8768:285;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8768:285:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8768:285:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8768:285:48;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8768:285:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8768:285:48;;;;;;;;;;;;;;;:::i;:::-;;4937:755;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4937:755:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4937:755:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:127:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3339:127:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1066:62:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5240:230:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5240:230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1135:62:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7947:156:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7947:156:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;982:142:10;1059:4;1083:20;:33;1104:11;1083:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:40;;982:142;;;:::o;4609:92:48:-;4655:13;4688:5;4681:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4609:92;:::o;7296:213::-;7364:7;7392:16;7400:7;7392;:16::i;:::-;7384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7477:15;:24;7493:7;7477:24;;;;;;;;;;;;;;;;;;;;;7470:31;;7296:213;;;:::o;6840:390::-;6921:13;6937:16;6945:7;6937;:16::i;:::-;6921:32;;6978:5;6972:11;;:2;:11;;;;6964:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7058:5;7042:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;7067:37;7084:5;7091:12;:10;:12::i;:::-;7067:16;:37::i;:::-;7042:62;7034:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7201:21;7210:2;7214:7;7201:8;:21::i;:::-;6840:390;;;:::o;6334:203::-;6387:7;6508:21;:12;:19;:21::i;:::-;6501:28;;6334:203;:::o;8170:305::-;8331:41;8350:12;:10;:12::i;:::-;8364:7;8331:18;:41::i;:::-;8323:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8439:28;8449:4;8455:2;8459:7;8439:9;:28::i;:::-;8170:305;;;:::o;4392:114:6:-;4449:7;4476:6;:12;4483:4;4476:12;;;;;;;;;;;:22;;;4469:29;;4392:114;;;:::o;4768:227::-;4852:45;4860:6;:12;4867:4;4860:12;;;;;;;;;;;:22;;;4884:12;:10;:12::i;:::-;4852:7;:45::i;:::-;4844:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:25;4973:4;4979:7;4962:10;:25::i;:::-;4768:227;;:::o;6104:154:48:-;6193:7;6220:30;6244:5;6220:13;:20;6234:5;6220:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6213:37;;6104:154;;;;:::o;5977:209:6:-;6075:12;:10;:12::i;:::-;6064:23;;:7;:23;;;6056:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6152:26;6164:4;6170:7;6152:11;:26::i;:::-;5977:209;;:::o;3224:185:26:-;3277:34;1173:24;;;;;;;;;;;;;;;;;;;3298:12;:10;:12::i;:::-;3277:7;:34::i;:::-;3269:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:10;:8;:10::i;:::-;3224:185::o;8546:151:48:-;8650:39;8667:4;8673:2;8677:7;8650:39;;;;;;;;;;;;:16;:39::i;:::-;8546:151;;;:::o;464:245:49:-;582:41;601:12;:10;:12::i;:::-;615:7;582:18;:41::i;:::-;574:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:14;693:7;687:5;:14::i;:::-;464:245;:::o;6614:164:48:-;6681:7;6702:15;6723:22;6739:5;6723:12;:15;;:22;;;;:::i;:::-;6701:44;;;6763:7;6756:14;;;6614:164;;;:::o;1078:78:66:-;1117:4;1141:7;;;;;;;;;;;1134:14;;1078:78;:::o;4373:169:48:-;4437:7;4464:70;4481:7;4464:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4457:77;;4373:169;;;:::o;2204:407:26:-;2264:34;1104:24;;;;;;;;;;;;;;;;;;;2285:12;:10;:12::i;:::-;2264:7;:34::i;:::-;2256:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2529:36;2535:2;2539:25;:15;:23;:25::i;:::-;2529:5;:36::i;:::-;2576:27;:15;:25;:27::i;:::-;2204:407;:::o;5931:89:48:-;5971:13;6004:8;5997:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5931:89;:::o;4096:215::-;4160:7;4205:1;4188:19;;:5;:19;;;;4180:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4274:29;:13;:20;4288:5;4274:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4267:36;;4096:215;;;:::o;2826:179:26:-;2877:34;1173:24;;;;;;;;;;;;;;;;;;;2898:12;:10;:12::i;:::-;2877:7;:34::i;:::-;2869:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:8;:6;:8::i;:::-;2826:179::o;4065:138:6:-;4138:7;4165:30;4189:5;4165:6;:12;4172:4;4165:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4158:37;;4065:138;;;;:::o;3026:139::-;3095:4;3119:38;3149:7;3119:6;:12;3126:4;3119:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3112:45;;3026:139;;;;:::o;4770:96:48:-;4818:13;4851:7;4844:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4770:96;:::o;1771:49:6:-;1816:4;1771:49;;;:::o;7581:295:48:-;7696:12;:10;:12::i;:::-;7684:24;;:8;:24;;;;7676:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:8;7751:18;:32;7770:12;:10;:12::i;:::-;7751:32;;;;;;;;;;;;;;;:42;7784:8;7751:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7849:8;7820:48;;7835:12;:10;:12::i;:::-;7820:48;;;7859:8;7820:48;;;;;;;;;;;;;;;;;;;;;;7581:295;;:::o;8768:285::-;8900:41;8919:12;:10;:12::i;:::-;8933:7;8900:18;:41::i;:::-;8892:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9006:39;9020:4;9026:2;9030:7;9039:5;9006:13;:39::i;:::-;8768:285;;;;:::o;4937:755::-;5002:13;5036:16;5044:7;5036;:16::i;:::-;5028:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5117:23;5143:10;:19;5154:7;5143:19;;;;;;;;;;;5117:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5264:1;5244:8;5238:22;;;;;;;;;;;;;;;;:27;5234:76;;;5289:9;5282:16;;;;;5234:76;5440:1;5420:9;5414:23;:27;5410:112;;;5489:8;5499:9;5472:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5472:37:48;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5472:37:48;;;5458:52;;;;;5410:112;5654:8;5664:18;:7;:16;:18::i;:::-;5637:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5637:46:48;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5637:46:48;;;5623:61;;;4937:755;;;;:::o;3339:127:6:-;3402:7;3429:29;:6;:12;3436:4;3429:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3422:36;;3339:127;;;:::o;1066:62:26:-;1104:24;;;;;;;;;;;;;;;;;;;1066:62;:::o;5240:230:6:-;5325:45;5333:6;:12;5340:4;5333:12;;;;;;;;;;;:22;;;5357:12;:10;:12::i;:::-;5325:7;:45::i;:::-;5317:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5436:26;5448:4;5454:7;5436:11;:26::i;:::-;5240:230;;:::o;1135:62:26:-;1173:24;;;;;;;;;;;;;;;;;;;1135:62;:::o;7947:156:48:-;8036:4;8060:18;:25;8079:5;8060:25;;;;;;;;;;;;;;;:35;8086:8;8060:35;;;;;;;;;;;;;;;;;;;;;;;;;8053:42;;7947:156;;;;:::o;10520:119::-;10577:4;10601:30;10623:7;10601:12;:21;;:30;;;;:::i;:::-;10594:37;;10520:119;;;:::o;605:106:0:-;658:15;693:10;686:17;;605:106;:::o;16347:158:48:-;16440:2;16413:15;:24;16429:7;16413:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16489:7;16485:2;16458:39;;16467:16;16475:7;16467;:16::i;:::-;16458:39;;;;;;;;;;;;16347:158;;:::o;7224:123:64:-;7293:7;7320:19;7328:3;:10;;7320:7;:19::i;:::-;7313:26;;7224:123;;;:::o;10806:333:48:-;10891:4;10916:16;10924:7;10916;:16::i;:::-;10908:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10992:13;11008:16;11016:7;11008;:16::i;:::-;10992:32;;11054:5;11043:16;;:7;:16;;;:51;;;;11087:7;11063:31;;:20;11075:7;11063:11;:20::i;:::-;:31;;;11043:51;:87;;;;11098:32;11115:5;11122:7;11098:16;:32::i;:::-;11043:87;11035:96;;;10806:333;;;;:::o;13895:574::-;14013:4;13993:24;;:16;14001:7;13993;:16::i;:::-;:24;;;13985:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14096:1;14082:16;;:2;:16;;;;14074:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14152:39;14173:4;14179:2;14183:7;14152:20;:39::i;:::-;14256:29;14273:1;14277:7;14256:8;:29::i;:::-;14298:35;14325:7;14298:13;:19;14312:4;14298:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;14344:30;14366:7;14344:13;:17;14358:2;14344:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14387:29;14404:7;14413:2;14387:12;:16;;:29;;;;;:::i;:::-;;14453:7;14449:2;14434:27;;14443:4;14434:27;;;;;;;;;;;;13895:574;;;:::o;7220:188:6:-;7294:33;7319:7;7294:6;:12;7301:4;7294:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7290:111;;;7376:12;:10;:12::i;:::-;7349:40;;7367:7;7349:40;;7361:4;7349:40;;;;;;;;;;7290:111;7220:188;;:::o;7888:137:65:-;7959:7;7994:22;7998:3;:10;;8010:5;7994:3;:22::i;:::-;7986:31;;7979:38;;7888:137;;;;:::o;7416:192:6:-;7491:36;7519:7;7491:6;:12;7498:4;7491:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7487:114;;;7576:12;:10;:12::i;:::-;7549:40;;7567:7;7549:40;;7561:4;7549:40;;;;;;;;;;7487:114;7416:192;;:::o;2127:120:66:-;1672:7;;;;;;;;;;;1664:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:5:::1;2186:7;;:15;;;;;;;;;;;;;;;;;;2217:22;2226:12;:10;:12::i;:::-;2217:22;;;;;;;;;;;;;;;;;;;;;;2127:120::o:0;13038:520:48:-;13098:13;13114:16;13122:7;13114;:16::i;:::-;13098:32;;13143:48;13164:5;13179:1;13183:7;13143:20;:48::i;:::-;13232:29;13249:1;13253:7;13232:8;:29::i;:::-;13351:1;13320:10;:19;13331:7;13320:19;;;;;;;;;;;13314:33;;;;;;;;;;;;;;;;:38;13310:97;;13376:10;:19;13387:7;13376:19;;;;;;;;;;;;13369:26;;;;:::i;:::-;13310:97;13419:36;13447:7;13419:13;:20;13433:5;13419:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;13468:28;13488:7;13468:12;:19;;:28;;;;:::i;:::-;;13542:7;13538:1;13514:36;;13523:5;13514:36;;;;;;;;;;;;13038:520;;:::o;7686:227:64:-;7766:7;7775;7796:11;7809:13;7826:22;7830:3;:10;;7842:5;7826:3;:22::i;:::-;7795:53;;;;7875:3;7867:12;;7897:5;7889:14;;7859:46;;;;;;;;;7686:227;;;;;:::o;8348:204::-;8455:7;8498:44;8503:3;:10;;8523:3;8515:12;;8529;8498:4;:44::i;:::-;8490:53;;8475:69;;8348:204;;;;;:::o;1125:114:62:-;1190:7;1217;:14;;;1210:21;;1125:114;;;:::o;12405:404:48:-;12499:1;12485:16;;:2;:16;;;;12477:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12558:16;12566:7;12558;:16::i;:::-;12557:17;12549:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12620:45;12649:1;12653:2;12657:7;12620:20;:45::i;:::-;12678:30;12700:7;12678:13;:17;12692:2;12678:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12721:29;12738:7;12747:2;12721:12;:16;;:29;;;;;:::i;:::-;;12793:7;12789:2;12768:33;;12785:1;12768:33;;;;;;;;;;;;12405:404;;:::o;1247:181:62:-;1419:1;1401:7;:14;;;:19;;;;;;;;;;;1247:181;:::o;7430:114:65:-;7490:7;7517:19;7525:3;:10;;7517:7;:19::i;:::-;7510:26;;7430:114;;;:::o;1868:118:66:-;1396:7;;;;;;;;;;;1395:8;1387:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:4:::1;1928:7;;:14;;;;;;;;;;;;;;;;;;1958:20;1965:12;:10;:12::i;:::-;1958:20;;;;;;;;;;;;;;;;;;;;;;1868:118::o:0;6269:149:65:-;6343:7;6386:22;6390:3;:10;;6402:5;6386:3;:22::i;:::-;6378:31;;6363:47;;6269:149;;;;:::o;5564:158::-;5644:4;5668:46;5678:3;:10;;5706:5;5698:14;;5690:23;;5668:9;:46::i;:::-;5661:53;;5564:158;;;;:::o;9935:272:48:-;10049:28;10059:4;10065:2;10069:7;10049:9;:28::i;:::-;10096:48;10119:4;10125:2;10129:7;10138:5;10096:22;:48::i;:::-;10088:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9935:272;;;;:::o;213:744:69:-;269:13;499:1;490:5;:10;486:53;;;517:10;;;;;;;;;;;;;;;;;;;;;486:53;549:12;564:5;549:20;;580:14;605:78;620:1;612:4;:9;605:78;;638:8;;;;;;;669:2;661:10;;;;;;;;;605:78;;;693:19;725:6;715:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;715:17:69;;;;693:39;;743:13;768:1;759:6;:10;743:26;;787:5;780:12;;803:115;818:1;810:4;:9;803:115;;877:2;870:4;:9;;;;;;865:2;:14;854:27;;836:6;843:7;;;;;;;836:15;;;;;;;;;;;:45;;;;;;;;;;;904:2;896:10;;;;;;;;;803:115;;;942:6;928:21;;;;;;213:744;;;;:::o;5808:117:65:-;5871:7;5898:19;5906:3;:10;;5898:7;:19::i;:::-;5891:26;;5808:117;;;:::o;6985:151:64:-;7069:4;7093:35;7103:3;:10;;7123:3;7115:12;;7093:9;:35::i;:::-;7086:42;;6985:151;;;;:::o;4607:110::-;4663:7;4690:3;:12;;:19;;;;4683:26;;4607:110;;;:::o;3417:187:26:-;3551:45;3578:4;3584:2;3588:7;3551:26;:45::i;:::-;3417:187;;;:::o;6975:137:65:-;7045:4;7069:35;7077:3;:10;;7097:5;7089:14;;7069:7;:35::i;:::-;7062:42;;6975:137;;;;:::o;6668:131::-;6735:4;6759:32;6764:3;:10;;6784:5;6776:14;;6759:4;:32::i;:::-;6752:39;;6668:131;;;;:::o;6417:176:64:-;6506:4;6530:55;6535:3;:10;;6555:3;6547:12;;6577:5;6569:14;;6561:23;;6530:4;:55::i;:::-;6523:62;;6417:176;;;;;:::o;5010:143:65:-;5080:4;5104:41;5109:3;:10;;5137:5;5129:14;;5121:23;;5104:4;:41::i;:::-;5097:48;;5010:143;;;;:::o;4552:204::-;4619:7;4668:5;4647:3;:11;;:18;;;;:26;4639:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:3;:11;;4742:5;4730:18;;;;;;;;;;;;;;;;4723:25;;4552:204;;;;:::o;5329:149::-;5402:4;5426:44;5434:3;:10;;5462:5;5454:14;;5446:23;;5426:7;:44::i;:::-;5419:51;;5329:149;;;;:::o;6759:142:64:-;6836:4;6860:33;6868:3;:10;;6888:3;6880:12;;6860:7;:33::i;:::-;6853:40;;6759:142;;;;:::o;5072:279::-;5139:7;5148;5198:5;5176:3;:12;;:19;;;;:27;5168:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5255:22;5280:3;:12;;5293:5;5280:19;;;;;;;;;;;;;;;;;;5255:44;;5318:5;:10;;;5330:5;:12;;;5310:33;;;;;5072:279;;;;;:::o;5774:319::-;5868:7;5888:16;5907:3;:12;;:17;5920:3;5907:17;;;;;;;;;;;;5888:36;;5955:1;5943:8;:13;;5958:12;5935:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5935:36:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6025:3;:12;;6049:1;6038:8;:12;6025:26;;;;;;;;;;;;;;;;;;:33;;;6018:40;;;5774:319;;;;;:::o;4099:109:65:-;4155:7;4182:3;:11;;:18;;;;4175:25;;4099:109;;;:::o;3884:129::-;3957:4;4004:1;3981:3;:12;;:19;3994:5;3981:19;;;;;;;;;;;;:24;;3974:31;;3884:129;;;;:::o;15735:604:48:-;15856:4;15883:15;:2;:13;;;:15::i;:::-;15878:60;;15922:4;15915:11;;;;15878:60;15948:23;15974:252;16027:45;;;16087:12;:10;:12::i;:::-;16114:4;16133:7;16155:5;15990:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15990:181:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15990:181:48;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15990:181:48;15974:252;;;;;;;;;;;;;;;;;:2;:15;;;;:252;;;;;:::i;:::-;15948:278;;16237:13;16264:10;16253:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16253:32:48;;;;;;;;;;;;;;;;16237:48;;1097:10;16314:16;;16304:26;;;:6;:26;;;;16296:35;;;;15735:604;;;;;;;:::o;4387:125:64:-;4458:4;4503:1;4482:3;:12;;:17;4495:3;4482:17;;;;;;;;;;;;:22;;4475:29;;4387:125;;;;:::o;609:241:51:-;719:45;746:4;752:2;756:7;719:26;:45::i;:::-;786:8;:6;:8::i;:::-;785:9;777:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;609:241;;;:::o;2254:1544:65:-;2320:4;2438:18;2459:3;:12;;:19;2472:5;2459:19;;;;;;;;;;;;2438:40;;2509:1;2495:10;:15;2491:1300;;2857:21;2894:1;2881:10;:14;2857:38;;2910:17;2951:1;2930:3;:11;;:18;;;;:22;2910:42;;3197:17;3217:3;:11;;3229:9;3217:22;;;;;;;;;;;;;;;;3197:42;;3363:9;3334:3;:11;;3346:13;3334:26;;;;;;;;;;;;;;;:38;;;;3482:1;3466:13;:17;3440:3;:12;;:23;3453:9;3440:23;;;;;;;;;;;:43;;;;3592:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3687:3;:12;;:19;3700:5;3687:19;;;;;;;;;;;3680:26;;;3730:4;3723:11;;;;;;;;2491:1300;3774:5;3767:12;;;2254:1544;;;;;:::o;1664:414::-;1727:4;1749:21;1759:3;1764:5;1749:9;:21::i;:::-;1744:327;;1787:3;:11;;1804:5;1787:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1787:23:65;;;;;;;;;;;;;;;;;;;1970:3;:11;;:18;;;;1948:3;:12;;:19;1961:5;1948:19;;;;;;;;;;;:40;;;;2010:4;2003:11;;;;1744:327;2054:5;2047:12;;1664:414;;;;;:::o;1887:692:64:-;1963:4;2079:16;2098:3;:12;;:17;2111:3;2098:17;;;;;;;;;;;;2079:36;;2144:1;2132:8;:13;2128:444;;;2199:3;:12;;2217:38;;;;;;;;2234:3;2217:38;;;;2247:5;2217:38;;;2199:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2199:57:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:3;:12;;:19;;;;2394:3;:12;;:17;2407:3;2394:17;;;;;;;;;;;:39;;;;2455:4;2448:11;;;;;2128:444;2528:5;2492:3;:12;;2516:1;2505:8;:12;2492:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2555:5;2548:12;;;1887:692;;;;;;:::o;2754:1549::-;2818:4;2934:16;2953:3;:12;;:17;2966:3;2953:17;;;;;;;;;;;;2934:36;;2999:1;2987:8;:13;2983:1313;;3348:21;3383:1;3372:8;:12;3348:36;;3399:17;3441:1;3419:3;:12;;:19;;;;:23;3399:43;;3687:26;3716:3;:12;;3729:9;3716:23;;;;;;;;;;;;;;;;;;3687:52;;3864:9;3834:3;:12;;3847:13;3834:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3988:1;3972:13;:17;3941:3;:12;;:28;3954:9;:14;;;3941:28;;;;;;;;;;;:48;;;;4098:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4194:3;:12;;:17;4207:3;4194:17;;;;;;;;;;;4187:24;;;4235:4;4228:11;;;;;;;;2983:1313;4279:5;4272:12;;;2754:1549;;;;;:::o;743:422:60:-;803:4;1011:12;1122:7;1110:20;1102:28;;1156:1;1149:4;:8;1142:15;;;743:422;;;:::o;3661:196::-;3764:12;3796:53;3819:6;3827:4;3833:1;3836:12;3796:22;:53::i;:::-;3789:60;;3661:196;;;;;:::o;17118:93:48:-;;;;:::o;5038:979:60:-;5168:12;5201:18;5212:6;5201:10;:18::i;:::-;5193:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:12;5341:23;5368:6;:11;;5388:8;5399:4;5368:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5368:36:60;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;5326:78:60;;;;5419:7;5415:595;;;5450:10;5443:17;;;;;;5415:595;5584:1;5564:10;:17;:21;5560:439;;;5827:10;5821:17;5888:15;5875:10;5871:2;5867:19;5860:44;5775:148;5970:12;5963:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5963:20:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5038:979;;;;;;;:::o;917:2690:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\nimport \"../access/AccessControl.sol\";\r\nimport \"../GSN/Context.sol\";\r\nimport \"../utils/Counters.sol\";\r\nimport \"../token/ERC721/ERC721.sol\";\r\nimport \"../token/ERC721/ERC721Burnable.sol\";\r\nimport \"../token/ERC721/ERC721Pausable.sol\";\r\n\r\n/**\r\n * @dev {ERC721} token, including:\r\n *\r\n *  - ability for holders to burn (destroy) their tokens\r\n *  - a minter role that allows for token minting (creation)\r\n *  - a pauser role that allows to stop all token transfers\r\n *  - token ID and URI autogeneration\r\n *\r\n * This contract uses {AccessControl} to lock permissioned functions using the\r\n * different roles - head to its documentation for details.\r\n *\r\n * The account that deploys the contract will be granted the minter and pauser\r\n * roles, as well as the default admin role, which will let it grant both minter\r\n * and pauser roles to other accounts.\r\n */\r\ncontract ERC721PresetMinterPauserAutoId is Context, AccessControl, ERC721Burnable, ERC721Pausable {\r\n    using Counters for Counters.Counter;\r\n\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n\r\n    Counters.Counter private _tokenIdTracker;\r\n\r\n    /**\r\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\r\n     * account that deploys the contract.\r\n     *\r\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\r\n     * See {ERC721-tokenURI}.\r\n     */\r\n    constructor(string memory name, string memory symbol, string memory baseURI) public ERC721(name, symbol) {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n\r\n        _setupRole(MINTER_ROLE, _msgSender());\r\n        _setupRole(PAUSER_ROLE, _msgSender());\r\n\r\n        _setBaseURI(baseURI);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a new token for `to`. Its token ID will be automatically\r\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\r\n     * URI autogenerated based on the base URI passed at construction.\r\n     *\r\n     * See {ERC721-_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `MINTER_ROLE`.\r\n     */\r\n    function mint(address to) public virtual {\r\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\r\n\r\n        // We cannot just use balanceOf to create the new tokenId because tokens\r\n        // can be burned (destroyed), so we need a separate counter.\r\n        _mint(to, _tokenIdTracker.current());\r\n        _tokenIdTracker.increment();\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_pause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function pause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_unpause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function unpause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\r\n        _unpause();\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Pausable) {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\TC\\OneDrive\\Documentos\\GitHub\\cryptoaliens\\solidity\\contracts\\@openzeppelin\\contracts\\presets\\ERC721PresetMinterPauserAutoId.sol",
  "ast": {
    "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoId": [
        3574
      ]
    },
    "id": 3575,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3428,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:26"
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "../access/AccessControl.sol",
        "id": 3429,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 1399,
        "src": "62:37:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 3430,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 23,
        "src": "101:28:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Counters.sol",
        "file": "../utils/Counters.sol",
        "id": 3431,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 9540,
        "src": "131:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 3432,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7709,
        "src": "164:36:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 3433,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7737,
        "src": "202:44:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 3434,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7797,
        "src": "248:44:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3435,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "960:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$22",
                "typeString": "contract Context"
              }
            },
            "id": 3436,
            "nodeType": "InheritanceSpecifier",
            "src": "960:7:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3437,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "969:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$1398",
                "typeString": "contract AccessControl"
              }
            },
            "id": 3438,
            "nodeType": "InheritanceSpecifier",
            "src": "969:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3439,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7736,
              "src": "984:14:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$7736",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 3440,
            "nodeType": "InheritanceSpecifier",
            "src": "984:14:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3441,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7796,
              "src": "1000:14:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$7796",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 3442,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:14:26"
          }
        ],
        "contractDependencies": [
          22,
          1398,
          1718,
          1953,
          7708,
          7736,
          7796,
          7899,
          7926,
          7949,
          10543
        ],
        "contractKind": "contract",
        "documentation": "@dev {ERC721} token, including:\n\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - token ID and URI autogeneration\n\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles - head to its documentation for details.\n\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts.",
        "fullyImplemented": true,
        "id": 3574,
        "linearizedBaseContracts": [
          3574,
          7796,
          10543,
          7736,
          7708,
          7926,
          7949,
          7899,
          1718,
          1953,
          1398,
          22
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3445,
            "libraryName": {
              "contractScope": null,
              "id": 3443,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9539,
              "src": "1028:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$9539",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:36:26",
            "typeName": {
              "contractScope": null,
              "id": 3444,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9499,
              "src": "1041:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9499_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 3450,
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1066:62:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3446,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 3448,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1114:13:26",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 3447,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1104:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3449,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1104:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 3455,
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1135:62:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3451,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1135:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 3453,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1183:13:26",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 3452,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1173:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3454,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1173:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3457,
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1206:40:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9499_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 3456,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9499,
              "src": "1206:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9499_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "1622:194:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3471,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1153,
                        "src": "1644:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3472,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1664:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3470,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1633:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3475,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:44:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3477,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "1701:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3478,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1714:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1714:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3476,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1690:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3481,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:37:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3483,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3455,
                        "src": "1749:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3484,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1762:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3482,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1738:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3487,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:37:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3489,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "1800:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3488,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7618,
                      "src": "1788:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:20:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:20:26"
                }
              ]
            },
            "documentation": "@dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\naccount that deploys the contract.\n\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\nSee {ERC721-tokenURI}.",
            "id": 3493,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3466,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3459,
                    "src": "1608:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3467,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3461,
                    "src": "1614:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3465,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7708,
                  "src": "1601:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$7708_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1601:20:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3459,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1529:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1549:20:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1571:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1528:65:26"
            },
            "returnParameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1622:0:26"
            },
            "scope": 3574,
            "src": "1517:299:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "2245:366:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3500,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3450,
                            "src": "2272:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3501,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2285:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2285:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3499,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "2264:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2264:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 3504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:63:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 3498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:108:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:108:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3508,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "2535:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3509,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3457,
                            "src": "2539:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$9499_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9510,
                          "src": "2539:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9499_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9499_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:25:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3507,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7450,
                      "src": "2529:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3513,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3514,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "2576:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9499_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9522,
                      "src": "2576:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9499_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9499_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:27:26"
                }
              ]
            },
            "documentation": "@dev Creates a new token for `to`. Its token ID will be automatically\nassigned (and available on the emitted {IERC721-Transfer} event), and the token\nURI autogenerated based on the base URI passed at construction.\n\n     * See {ERC721-_mint}.\n\n     * Requirements:\n\n     * - the caller must have the `MINTER_ROLE`.",
            "functionSelector": "6a627842",
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3520,
                  "src": "2218:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2217:12:26"
            },
            "returnParameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:0:26"
            },
            "scope": 3574,
            "src": "2204:407:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "2858:147:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3525,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3455,
                            "src": "2885:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3526,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2898:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3524,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "2877:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 3529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:64:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 3523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:109:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3531,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:109:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3532,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10527,
                      "src": "2989:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:8:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3534,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:8:26"
                }
              ]
            },
            "documentation": "@dev Pauses all token transfers.\n\n     * See {ERC721Pausable} and {Pausable-_pause}.\n\n     * Requirements:\n\n     * - the caller must have the `PAUSER_ROLE`.",
            "functionSelector": "8456cb59",
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2840:2:26"
            },
            "returnParameters": {
              "id": 3522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:0:26"
            },
            "scope": 3574,
            "src": "2826:179:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3551,
              "nodeType": "Block",
              "src": "3258:151:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3541,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3455,
                            "src": "3285:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3542,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "3298:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3298:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3540,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "3277:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 3545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:66:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 3539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3269:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:111:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3547,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:111:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3548,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10542,
                      "src": "3391:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:10:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3550,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:10:26"
                }
              ]
            },
            "documentation": "@dev Unpauses all token transfers.\n\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n\n     * Requirements:\n\n     * - the caller must have the `PAUSER_ROLE`.",
            "functionSelector": "3f4ba83a",
            "id": 3552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:26"
            },
            "returnParameters": {
              "id": 3538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:26"
            },
            "scope": 3574,
            "src": "3224:185:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7707,
              7795
            ],
            "body": {
              "id": 3572,
              "nodeType": "Block",
              "src": "3540:64:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3567,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3554,
                        "src": "3578:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3568,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3556,
                        "src": "3584:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3569,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "3588:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3564,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3551:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoId_$3574",
                          "typeString": "contract super ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7795,
                      "src": "3551:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3571,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:45:26"
                }
              ]
            },
            "documentation": null,
            "id": 3573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3562,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 3560,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7708,
                  "src": "3516:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$7708",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 3561,
                  "name": "ERC721Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7796,
                  "src": "3524:14:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Pausable_$7796",
                    "typeString": "contract ERC721Pausable"
                  }
                }
              ],
              "src": "3507:32:26"
            },
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3554,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3447:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3556,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3461:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3558,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3473:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3446:43:26"
            },
            "returnParameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:0:26"
            },
            "scope": 3574,
            "src": "3417:187:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3575,
        "src": "917:2690:26"
      }
    ],
    "src": "35:3574:26"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoId": [
        3574
      ]
    },
    "id": 3575,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3428,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:26"
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "../access/AccessControl.sol",
        "id": 3429,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 1399,
        "src": "62:37:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 3430,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 23,
        "src": "101:28:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/utils/Counters.sol",
        "file": "../utils/Counters.sol",
        "id": 3431,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 9540,
        "src": "131:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 3432,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7709,
        "src": "164:36:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 3433,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7737,
        "src": "202:44:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/TC/OneDrive/Documentos/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 3434,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 7797,
        "src": "248:44:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3435,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "960:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$22",
                "typeString": "contract Context"
              }
            },
            "id": 3436,
            "nodeType": "InheritanceSpecifier",
            "src": "960:7:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3437,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "969:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$1398",
                "typeString": "contract AccessControl"
              }
            },
            "id": 3438,
            "nodeType": "InheritanceSpecifier",
            "src": "969:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3439,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7736,
              "src": "984:14:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$7736",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 3440,
            "nodeType": "InheritanceSpecifier",
            "src": "984:14:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3441,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7796,
              "src": "1000:14:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$7796",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 3442,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:14:26"
          }
        ],
        "contractDependencies": [
          22,
          1398,
          1718,
          1953,
          7708,
          7736,
          7796,
          7899,
          7926,
          7949,
          10543
        ],
        "contractKind": "contract",
        "documentation": "@dev {ERC721} token, including:\n\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - token ID and URI autogeneration\n\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles - head to its documentation for details.\n\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts.",
        "fullyImplemented": true,
        "id": 3574,
        "linearizedBaseContracts": [
          3574,
          7796,
          10543,
          7736,
          7708,
          7926,
          7949,
          7899,
          1718,
          1953,
          1398,
          22
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3445,
            "libraryName": {
              "contractScope": null,
              "id": 3443,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9539,
              "src": "1028:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$9539",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:36:26",
            "typeName": {
              "contractScope": null,
              "id": 3444,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9499,
              "src": "1041:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9499_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 3450,
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1066:62:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3446,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 3448,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1114:13:26",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 3447,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1104:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3449,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1104:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 3455,
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1135:62:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3451,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1135:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 3453,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1183:13:26",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 3452,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1173:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3454,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1173:24:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3457,
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1206:40:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9499_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 3456,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9499,
              "src": "1206:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9499_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "1622:194:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3471,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1153,
                        "src": "1644:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3472,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1664:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3470,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1633:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3475,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:44:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3477,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "1701:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3478,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1714:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1714:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3476,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1690:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3481,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:37:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3483,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3455,
                        "src": "1749:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3484,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1762:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:12:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3482,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1738:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3487,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:37:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3489,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "1800:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3488,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7618,
                      "src": "1788:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:20:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:20:26"
                }
              ]
            },
            "documentation": "@dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\naccount that deploys the contract.\n\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\nSee {ERC721-tokenURI}.",
            "id": 3493,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3466,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3459,
                    "src": "1608:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3467,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3461,
                    "src": "1614:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3465,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7708,
                  "src": "1601:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$7708_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1601:20:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3459,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1529:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1549:20:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3493,
                  "src": "1571:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1528:65:26"
            },
            "returnParameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1622:0:26"
            },
            "scope": 3574,
            "src": "1517:299:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "2245:366:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3500,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3450,
                            "src": "2272:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3501,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2285:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2285:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3499,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "2264:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2264:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 3504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:63:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 3498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:108:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:108:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3508,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "2535:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3509,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3457,
                            "src": "2539:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$9499_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9510,
                          "src": "2539:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9499_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9499_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:25:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3507,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7450,
                      "src": "2529:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3513,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3514,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "2576:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9499_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9522,
                      "src": "2576:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9499_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9499_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:27:26"
                }
              ]
            },
            "documentation": "@dev Creates a new token for `to`. Its token ID will be automatically\nassigned (and available on the emitted {IERC721-Transfer} event), and the token\nURI autogenerated based on the base URI passed at construction.\n\n     * See {ERC721-_mint}.\n\n     * Requirements:\n\n     * - the caller must have the `MINTER_ROLE`.",
            "functionSelector": "6a627842",
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3520,
                  "src": "2218:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2217:12:26"
            },
            "returnParameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:0:26"
            },
            "scope": 3574,
            "src": "2204:407:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "2858:147:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3525,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3455,
                            "src": "2885:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3526,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "2898:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3524,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "2877:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 3529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:64:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 3523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:109:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3531,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:109:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3532,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10527,
                      "src": "2989:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:8:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3534,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:8:26"
                }
              ]
            },
            "documentation": "@dev Pauses all token transfers.\n\n     * See {ERC721Pausable} and {Pausable-_pause}.\n\n     * Requirements:\n\n     * - the caller must have the `PAUSER_ROLE`.",
            "functionSelector": "8456cb59",
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2840:2:26"
            },
            "returnParameters": {
              "id": 3522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:0:26"
            },
            "scope": 3574,
            "src": "2826:179:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3551,
              "nodeType": "Block",
              "src": "3258:151:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3541,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3455,
                            "src": "3285:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3542,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "3298:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3298:12:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3540,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "3277:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:34:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 3545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:66:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 3539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3269:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:111:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3547,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:111:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3548,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10542,
                      "src": "3391:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:10:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3550,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:10:26"
                }
              ]
            },
            "documentation": "@dev Unpauses all token transfers.\n\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n\n     * Requirements:\n\n     * - the caller must have the `PAUSER_ROLE`.",
            "functionSelector": "3f4ba83a",
            "id": 3552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:26"
            },
            "returnParameters": {
              "id": 3538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:26"
            },
            "scope": 3574,
            "src": "3224:185:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7707,
              7795
            ],
            "body": {
              "id": 3572,
              "nodeType": "Block",
              "src": "3540:64:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3567,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3554,
                        "src": "3578:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3568,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3556,
                        "src": "3584:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3569,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "3588:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3564,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3551:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoId_$3574",
                          "typeString": "contract super ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7795,
                      "src": "3551:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3571,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:45:26"
                }
              ]
            },
            "documentation": null,
            "id": 3573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3562,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 3560,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7708,
                  "src": "3516:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$7708",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 3561,
                  "name": "ERC721Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7796,
                  "src": "3524:14:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Pausable_$7796",
                    "typeString": "contract ERC721Pausable"
                  }
                }
              ],
              "src": "3507:32:26"
            },
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3554,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3447:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3556,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3461:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3558,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "3473:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3446:43:26"
            },
            "returnParameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:0:26"
            },
            "scope": 3574,
            "src": "3417:187:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3575,
        "src": "917:2690:26"
      }
    ],
    "src": "35:3574:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-08T09:44:00.507Z",
  "devdoc": {
    "details": "{ERC721} token, including:  *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - token ID and URI autogeneration  * This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details.  * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}.      * Requirements:      * - The caller must own `tokenId` or be an approved operator."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract.      * Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.      * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.      * Role bearers are not sorted in any particular way, and their ordering may change at any point.      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.      * If `account` had not been already granted `role`, emits a {RoleGranted} event.      * Requirements:      * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction.      * See {ERC721-_mint}.      * Requirements:      * - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers.      * See {ERC721Pausable} and {Pausable-_pause}.      * Requirements:      * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.      * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).      * If the calling account had been granted `role`, emits a {RoleRevoked} event.      * Requirements:      * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.      * If `account` had been granted `role`, emits a {RoleRevoked} event.      * Requirements:      * - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.      * See {ERC721Pausable} and {Pausable-_unpause}.      * Requirements:      * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}