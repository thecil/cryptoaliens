{
  "contractName": "ERC721Holder",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface.    * Accepts all token transfers.  Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.      * Always returns `IERC721Receiver.onERC721Received.selector`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xb08d6f5b6f7c3b2dac2684cdde1b9b705a05f26e46b0285bf48e7fffef8445f4\",\"urls\":[\"bzz-raw://3587b5447205c8ca7887903931fe65f62496b57b09e15ea6f9b5ea217a15a81f\",\"dweb:/ipfs/QmPu52qt21syC3qSyCQQiUkimpevr5pndPzH3j4fA32hZi\"]},\"/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x90dea29aecfa0bc55f3ba86bd24d87b19726e2affa86292f4ba8052e85cc4d56\",\"urls\":[\"bzz-raw://b3518cea454999f659b0fd63f810ab61a7d568fe8ad974d84ab15febd321a0a5\",\"dweb:/ipfs/QmSvS87R4H68JuokmA4oZMELAB49uJfSxeLGfZuXB7dowZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101d1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b6101336004803603608081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100ad57600080fd5b8201836020820111156100bf57600080fd5b803590602001918460018302840111640100000000831117156100e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610187565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b600063150b7a0260e01b905094935050505056fea26469706673582212209f5fe560039674a04869a006f1acb7d01b6608472bc6876b8783676fd369ed9e64736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b6101336004803603608081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100ad57600080fd5b8201836020820111156100bf57600080fd5b803590602001918460018302840111640100000000831117156100e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610187565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b600063150b7a0260e01b905094935050505056fea26469706673582212209f5fe560039674a04869a006f1acb7d01b6608472bc6876b8783676fd369ed9e64736f6c63430006020033",
  "sourceMap": "352:364:50:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:364:50;;;;;;;",
  "deployedSourceMap": "352:364:50:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:364:50;;;;;;;;;;;;;;;;;;;549:164;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;549:164:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;549:164:50;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;549:164:50;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;549:164:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;549:164:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;649:6;675:30;;;668:37;;549:164;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\nimport \"./IERC721Receiver.sol\";\r\n\r\n  /**\r\n   * @dev Implementation of the {IERC721Receiver} interface.\r\n   *\r\n   * Accepts all token transfers. \r\n   * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\r\n   */\r\ncontract ERC721Holder is IERC721Receiver {\r\n\r\n    /**\r\n     * @dev See {IERC721Receiver-onERC721Received}.\r\n     *\r\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n}\r\n",
  "sourcePath": "C:/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
  "ast": {
    "absolutePath": "/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
    "exportedSymbols": {
      "ERC721Holder": [
        7761
      ]
    },
    "id": 7762,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7738,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:50"
      },
      {
        "absolutePath": "/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 7739,
        "nodeType": "ImportDirective",
        "scope": 7762,
        "sourceUnit": 7966,
        "src": "62:31:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7740,
              "name": "IERC721Receiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7965,
              "src": "377:15:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Receiver_$7965",
                "typeString": "contract IERC721Receiver"
              }
            },
            "id": 7741,
            "nodeType": "InheritanceSpecifier",
            "src": "377:15:50"
          }
        ],
        "contractDependencies": [
          7965
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of the {IERC721Receiver} interface.\n\n   * Accepts all token transfers. \nMake sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
        "fullyImplemented": true,
        "id": 7761,
        "linearizedBaseContracts": [
          7761,
          7965
        ],
        "name": "ERC721Holder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              7964
            ],
            "body": {
              "id": 7759,
              "nodeType": "Block",
              "src": "657:56:50",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "675:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Holder_$7761",
                          "typeString": "contract ERC721Holder"
                        }
                      },
                      "id": 7756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7760,
                      "src": "675:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "675:30:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 7754,
                  "id": 7758,
                  "nodeType": "Return",
                  "src": "668:37:50"
                }
              ]
            },
            "documentation": "@dev See {IERC721Receiver-onERC721Received}.\n\n     * Always returns `IERC721Receiver.onERC721Received.selector`.",
            "functionSelector": "150b7a02",
            "id": 7760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "631:8:50"
            },
            "parameters": {
              "id": 7750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "575:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "584:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "593:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "602:12:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:41:50"
            },
            "returnParameters": {
              "id": 7754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "649:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:8:50"
            },
            "scope": 7761,
            "src": "549:164:50",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7762,
        "src": "352:364:50"
      }
    ],
    "src": "35:683:50"
  },
  "legacyAST": {
    "absolutePath": "/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
    "exportedSymbols": {
      "ERC721Holder": [
        7761
      ]
    },
    "id": 7762,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7738,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:50"
      },
      {
        "absolutePath": "/C/GitHub/cryptoaliens/solidity/contracts/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 7739,
        "nodeType": "ImportDirective",
        "scope": 7762,
        "sourceUnit": 7966,
        "src": "62:31:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7740,
              "name": "IERC721Receiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7965,
              "src": "377:15:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Receiver_$7965",
                "typeString": "contract IERC721Receiver"
              }
            },
            "id": 7741,
            "nodeType": "InheritanceSpecifier",
            "src": "377:15:50"
          }
        ],
        "contractDependencies": [
          7965
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of the {IERC721Receiver} interface.\n\n   * Accepts all token transfers. \nMake sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
        "fullyImplemented": true,
        "id": 7761,
        "linearizedBaseContracts": [
          7761,
          7965
        ],
        "name": "ERC721Holder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              7964
            ],
            "body": {
              "id": 7759,
              "nodeType": "Block",
              "src": "657:56:50",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7755,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "675:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Holder_$7761",
                          "typeString": "contract ERC721Holder"
                        }
                      },
                      "id": 7756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7760,
                      "src": "675:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "675:30:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 7754,
                  "id": 7758,
                  "nodeType": "Return",
                  "src": "668:37:50"
                }
              ]
            },
            "documentation": "@dev See {IERC721Receiver-onERC721Received}.\n\n     * Always returns `IERC721Receiver.onERC721Received.selector`.",
            "functionSelector": "150b7a02",
            "id": 7760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "631:8:50"
            },
            "parameters": {
              "id": 7750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "575:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "584:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "593:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "602:12:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:41:50"
            },
            "returnParameters": {
              "id": 7754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7760,
                  "src": "649:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:8:50"
            },
            "scope": 7761,
            "src": "549:164:50",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7762,
        "src": "352:364:50"
      }
    ],
    "src": "35:683:50"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-17T04:17:09.219Z",
  "devdoc": {
    "details": "Implementation of the {IERC721Receiver} interface.    * Accepts all token transfers.  Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}.      * Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}